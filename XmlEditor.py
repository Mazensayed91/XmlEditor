# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'MainWindow.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_TextEditor(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1280, 720)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayoutWidget_2 = QtWidgets.QWidget(self.centralwidget)
        self.verticalLayoutWidget_2.setGeometry(QtCore.QRect(0, 0, 1280, 670))
        self.verticalLayoutWidget_2.setObjectName("verticalLayoutWidget_2")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_2)
        self.verticalLayout.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.textEdit = QtWidgets.QTextEdit(self.verticalLayoutWidget_2)
        self.textEdit.setTabStopDistance(
                                        QtGui.QFontMetricsF(self.textEdit.font()).horizontalAdvance(' ') * 5)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textEdit.sizePolicy().hasHeightForWidth())
        self.textEdit.setSizePolicy(sizePolicy)
        self.textEdit.setObjectName("textEdit")
        self.verticalLayout.addWidget(self.textEdit)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1180, 26))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menuSave_As = QtWidgets.QMenu(self.menuFile)
        self.menuSave_As.setObjectName("menuSave_As")
        self.menuEdit = QtWidgets.QMenu(self.menubar)
        self.menuEdit.setObjectName("menuEdit")
        self.menuSettings = QtWidgets.QMenu(self.menubar)
        self.menuSettings.setObjectName("menuSettings")
        self.menuPreferences = QtWidgets.QMenu(self.menuSettings)
        self.menuPreferences.setObjectName("menuPreferences")
        self.menuTools = QtWidgets.QMenu(self.menubar)
        self.menuTools.setObjectName("menuTools")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionOpen = QtWidgets.QAction(MainWindow)
        self.actionOpen.setObjectName("actionOpen")
        self.actionSave = QtWidgets.QAction(MainWindow)
        self.actionSave.setObjectName("actionSave")
        self.actionClose = QtWidgets.QAction(MainWindow)
        self.actionClose.setObjectName("actionClose")
        self.actionUndo = QtWidgets.QAction(MainWindow)
        self.actionUndo.setStatusTip("")
        self.actionUndo.setObjectName("actionUndo")
        self.actionRedo = QtWidgets.QAction(MainWindow)
        self.actionRedo.setObjectName("actionRedo")
        self.actionCut = QtWidgets.QAction(MainWindow)
        self.actionCut.setObjectName("actionCut")
        self.actionCopy = QtWidgets.QAction(MainWindow)
        self.actionCopy.setObjectName("actionCopy")
        self.actionPaste = QtWidgets.QAction(MainWindow)
        self.actionPaste.setObjectName("actionPaste")
        self.actionPrettifying = QtWidgets.QAction(MainWindow)
        self.actionPrettifying.setObjectName("actionPrettifying")
        self.actionError_Fixation = QtWidgets.QAction(MainWindow)
        self.actionError_Fixation.setObjectName("actionError_Fixation")
        self.actionMinifying = QtWidgets.QAction(MainWindow)
        self.actionMinifying.setObjectName("actionMinifying")
        self.actionCompress = QtWidgets.QAction(MainWindow)
        self.actionCompress.setObjectName("actionCompress")
        self.actionCompressed_file = QtWidgets.QAction(MainWindow)
        self.actionCompressed_file.setObjectName("actionCompressed_file")
        self.actionJSON_file = QtWidgets.QAction(MainWindow)
        self.actionJSON_file.setObjectName("actionJSON_file")
        self.actionXML_file = QtWidgets.QAction(MainWindow)
        self.actionXML_file.setObjectName("actionXML_file")
        self.actionFont = QtWidgets.QAction(MainWindow)
        self.actionFont.setObjectName("actionFont")
        self.actionText_Color = QtWidgets.QAction(MainWindow)
        self.actionText_Color.setObjectName("actionText_Color")
        self.actionBackground_Color = QtWidgets.QAction(MainWindow)
        self.actionBackground_Color.setObjectName("actionBackground_Color")
        self.menuSave_As.addAction(self.actionCompressed_file)
        self.menuSave_As.addAction(self.actionJSON_file)
        self.menuSave_As.addAction(self.actionXML_file)
        self.menuFile.addAction(self.actionOpen)
        self.menuFile.addAction(self.actionClose)
        self.menuFile.addAction(self.actionSave)
        self.menuFile.addAction(self.menuSave_As.menuAction())
        self.menuEdit.addAction(self.actionUndo)
        self.menuEdit.addAction(self.actionRedo)
        self.menuEdit.addAction(self.actionCut)
        self.menuEdit.addAction(self.actionCopy)
        self.menuEdit.addAction(self.actionPaste)
        self.menuPreferences.addAction(self.actionFont)
        self.menuPreferences.addAction(self.actionText_Color)
        self.menuPreferences.addAction(self.actionBackground_Color)
        self.menuSettings.addAction(self.menuPreferences.menuAction())
        self.menuTools.addAction(self.actionPrettifying)
        self.menuTools.addAction(self.actionError_Fixation)
        self.menuTools.addAction(self.actionMinifying)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuEdit.menuAction())
        self.menubar.addAction(self.menuTools.menuAction())
        self.menubar.addAction(self.menuSettings.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Editor"))
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.menuSave_As.setTitle(_translate("MainWindow", "Save As"))
        self.menuEdit.setTitle(_translate("MainWindow", "Edit"))
        self.menuSettings.setTitle(_translate("MainWindow", "Settings"))
        self.menuPreferences.setTitle(_translate("MainWindow", "Preferences"))
        self.menuTools.setTitle(_translate("MainWindow", "Tools"))
        self.actionOpen.setText(_translate("MainWindow", "Open"))
        self.actionOpen.setStatusTip(_translate("MainWindow", "Open a file"))
        self.actionOpen.setShortcut(_translate("MainWindow", "Ctrl+O"))
        self.actionSave.setText(_translate("MainWindow", "Save"))
        self.actionSave.setStatusTip(_translate("MainWindow", "Save a file"))
        self.actionSave.setShortcut(_translate("MainWindow", "Ctrl+S"))
        self.actionClose.setText(_translate("MainWindow", "Close"))
        self.actionClose.setStatusTip(_translate("MainWindow", "Close a file"))
        self.actionClose.setShortcut(_translate("MainWindow", "Ctrl+F4"))
        self.actionUndo.setText(_translate("MainWindow", "Undo"))
        self.actionUndo.setShortcut(_translate("MainWindow", "Ctrl+Z"))
        self.actionRedo.setText(_translate("MainWindow", "Redo"))
        self.actionRedo.setShortcut(_translate("MainWindow", "Ctrl+Y"))
        self.actionCut.setText(_translate("MainWindow", "Cut"))
        self.actionCut.setStatusTip(_translate("MainWindow", "Cuts the selected text"))
        self.actionCut.setShortcut(_translate("MainWindow", "Ctrl+X"))
        self.actionCopy.setText(_translate("MainWindow", "Copy"))
        self.actionCopy.setStatusTip(_translate("MainWindow", "Copies the selected text"))
        self.actionCopy.setShortcut(_translate("MainWindow", "Ctrl+C"))
        self.actionPaste.setText(_translate("MainWindow", "Paste"))
        self.actionPaste.setStatusTip(_translate("MainWindow", "Pastes the text"))
        self.actionPaste.setShortcut(_translate("MainWindow", "Ctrl+V"))
        self.actionPrettifying.setText(_translate("MainWindow", "Formatting (Prettifying)"))
        self.actionPrettifying.setStatusTip(_translate("MainWindow", "Formatting the XML file"))
        self.actionPrettifying.setShortcut(_translate("MainWindow", "F1"))
        self.actionError_Fixation.setText(_translate("MainWindow", "Error Fixation"))
        self.actionError_Fixation.setStatusTip(_translate("MainWindow", "Fixing errors in XML if exist"))
        self.actionError_Fixation.setShortcut(_translate("MainWindow", "F2"))
        self.actionMinifying.setText(_translate("MainWindow", "Minifying"))
        self.actionMinifying.setStatusTip(_translate("MainWindow", "Deletes the whitespaces and indentations"))
        self.actionMinifying.setShortcut(_translate("MainWindow", "F3"))
        self.actionCompress.setText(_translate("MainWindow", "Compress"))
        self.actionCompress.setStatusTip(_translate("MainWindow", "Reduces the size of the file"))
        self.actionCompress.setShortcut(_translate("MainWindow", "F4"))
        self.actionCompressed_file.setText(_translate("MainWindow", "Compressed file"))
        self.actionJSON_file.setText(_translate("MainWindow", "JSON file"))
        self.actionXML_file.setText(_translate("MainWindow", "XML file"))
        self.actionFont.setText(_translate("MainWindow", "Font"))
        self.actionText_Color.setText(_translate("MainWindow", "Text Color"))
        self.actionBackground_Color.setText(_translate("MainWindow", "Background Color"))


# if __name__ == "__main__":
#     import sys
#     app = QtWidgets.QApplication(sys.argv)
#     MainWindow = QtWidgets.QMainWindow()
#     ui = Ui_TextEditor()
#     ui.setupUi(MainWindow)
#     MainWindow.show()
#     sys.exit(app.exec_())
